name: Tests (minimal)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '*.dev'

jobs:
    cancel-running-tests:
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      timeout-minutes: 3
      steps:
          - name: Cancel running tests
            uses: fkirc/skip-duplicate-actions@master
            with:
              cancel_others: true

    build-for-testing:
        needs: cancel-running-tests

        name: Build EE for testing

        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Cache repository info
            uses: actions/cache@v3
            with:
              path: .git
              key: cache-ee-git-${{ github.sha }}

          - name: Get changed files
            id: changed_files
            uses: tj-actions/changed-files@v35
            with:
              separator: " "

          - name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
                php-version: '8.1'
                extensions: dom, curl, sqlite, libxml, mbstring, zip, pcntl, pdo, mysql, bcmath, soap, intl, gd, exif, iconv, imagick
                coverage: none
                tools: cs2pr, phpcs
                ini-values: error_log=/home/runner/php_errors.log, memory_limit=128M

          - name: Check PHP code style
            id: phpcs
            run: phpcs -q --standard=ExpressionEngine --report=checkstyle ${{ steps.changed_files.outputs.all_changed_files }} | cs2pr

          - name: Setup node
            uses: actions/setup-node@v3
            with:
              node-version: '10'

          - name: Install build tool dependencies
            working-directory: build-tools
            run: npm install

          - name: Get version
            id: build_json
            working-directory: build-tools
            run: |
              content=`node -pe 'JSON.parse(process.argv[1]).tag' "$(cat build.json)"`
              echo "BUILD_VERSION=$content" >> $GITHUB_OUTPUT

          - name: Run build process 
            working-directory: build-tools
            env:
              RELEASE_PRIVATE_KEY: ${{ secrets.RELEASE_PRIVATE_KEY }}
              RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
              APP_REPO_PATH: ${{ github.workspace }}
            run: gulp build-app --local --nogit --head --skip-lint --skip-pro --version=${{ steps.build_json.outputs.BUILD_VERSION }}

          - name: Rename build directory
            working-directory: build-tools/builds
            run: |
              mv ExpressionEngine${{ steps.build_json.outputs.BUILD_VERSION }} ExpressionEngine

          - name: Cache built EE version
            uses: actions/cache@v3
            with:
              path: build-tools/builds/ExpressionEngine
              key: cache-ee-build-${{ github.sha }}
          
          - name: Directory Listing on Failure
            if: failure()
            run: |
              ls -latr build-tools/builds
              ls -latr build-tools/builds/ExpressionEngine

    cypress-minimal:
        if: github.event.pull_request.draft == false
        needs: [cancel-running-tests, build-for-testing]
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                php: [8.1]
                os: [ubuntu-latest]
                containers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

        name: Cypress Tests, PHP${{ matrix.php }} - ${{ matrix.os }} ${{ matrix.containers }}
        steps:

            - name: Use cached EE build
              uses: actions/cache@v3
              with:
                path: build-tools/builds/ExpressionEngine
                key: cache-ee-build-${{ github.sha }}

            - name: Move files to webroot
              run: |
                ls -lar build-tools/builds/ExpressionEngine/
                cp -R build-tools/builds/ExpressionEngine/. ./
            
            - name: Restore cached git history
              uses: actions/cache@v3
              with:
                path: .git
                key: cache-ee-git-${{ github.sha }}

            - name: Directory Listing
              run: |
                ls -lar ./

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, sqlite, libxml, mbstring, zip, pcntl, pdo, mysql, bcmath, soap, intl, gd, exif, iconv, imagick
                  coverage: none
                  ini-values: error_log=/home/runner/php_errors.log, memory_limit=128M

            - name: Copy config.php
              run: |
                rm -f system/user/config/config.php
                cp -f tests/cypress/support/config/config.php system/user/config/config.php

            - name: Copy .env.php
              run: |
                rm -f .env.php
                cp -f tests/cypress/support/config/.env.php .env.php

            - name: Remove installer
              run: |
                mv system/ee/installer system/ee/_installer

            - name: Setup Permissions
              run: |
                sudo chmod 666 system/user/config/config.php
                sudo chmod 777 system/user/config
                sudo chmod -R 777 system/user/cache
                sudo chmod -R 777 system/user/templates
                sudo chmod -R 777 system/user/language
                sudo chmod -R 777 tests/cypress/support/tmp
                sudo chmod -R 777 tests/cypress/support/file-sync/uploads
                sudo chmod -R 777 images
                sudo chmod -R 777 themes/user
                sudo chmod -R 777 tests/cypress/cypress/screenshots

            - name: Configure MySQL
              run: |
                sudo systemctl start mysql
                mysql -u root -proot -e 'CREATE DATABASE `ee-test`;'
                mysql -u root -proot -e 'SET GLOBAL sql_mode="ONLY_FULL_GROUP_BY,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION";'

            - name: Install Testing PHP dependencies
              working-directory: tests/cypress
              run: composer install

            - name: Start PHP Server
              run: php tests/serve.php &

            - name: Start SMTP Server
              run: |
                npm install -g maildev
                maildev &
            
            - name: Get Cypress Specs
              if: "${{ env.CYPRESS_RECORD_KEY == '' }}"
              env:
                CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
              run: |
                echo "SPECS=$(node tests/cypress-split.js 10 ${{ matrix.containers }})" >> $GITHUB_OUTPUT
              id: specs

            - name: Run Cypress Tests (without dashboard)
              uses: cypress-io/github-action@v5
              if: "${{ env.CYPRESS_RECORD_KEY == '' }}"
              with:
                spec: ${{ steps.specs.outputs.SPECS }}
                browser: chrome
                working-directory: tests/cypress
                config-file: cypress.json
              env:
                CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

            - name: Install Chrome Beta
              uses: browser-actions/setup-chrome@latest
              with:
                chrome-version: beta

            - name: Run Cypress Tests
              uses: cypress-io/github-action@v5
              if: "${{ env.CYPRESS_RECORD_KEY != '' }}"
              with:
                browser: chrome
                working-directory: tests/cypress
                config-file: cypress.json
                record: true
                parallel: true
                group: PHP${{ matrix.php }}
              env:
                CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
                CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

            - name: Archive screenshots
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                name: cypress-tests-PHP${{ matrix.php }}-${{ matrix.containers }}
                path: tests/cypress/cypress/screenshots/

            - name: Archive server errors
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                name: error.PHP${{ matrix.php }}-${{ matrix.containers }}.log
                path: /home/runner/php_errors.log

            - name: Archive performance logs
              uses: actions/upload-artifact@v3
              with:
                name: csv-reports.PHP${{ matrix.php }}-${{ matrix.containers }}
                path: tests/cypress/cypress/downloads/
